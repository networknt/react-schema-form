var i=/[^\s\|\!\+\-\*\?\~\^\&\:\(\)\[\]\{\}\"\\]/,a=/[\|\!\+\-\*\?\~\^\&]/,c=/^(OR|AND|NOT|TO)$/;function k(n){return parseFloat(n).toString()===n}function f(n){return function(t,e){for(var r=!1,u;(u=t.next())!=null&&!(u==n&&!r);)r=!r&&u=="\\";return r||(e.tokenize=o),"string"}}function s(n){return function(t,e){return n=="|"?t.eat(/\|/):n=="&"&&t.eat(/\&/),e.tokenize=o,"operator"}}function l(n){return function(t,e){for(var r=n;(n=t.peek())&&n.match(i)!=null;)r+=t.next();return e.tokenize=o,c.test(r)?"operator":k(r)?"number":t.peek()==":"?"propertyName":"string"}}function o(n,t){var e=n.next();return e=='"'?t.tokenize=f(e):a.test(e)?t.tokenize=s(e):i.test(e)&&(t.tokenize=l(e)),t.tokenize!=o?t.tokenize(n,t):null}const p={name:"solr",startState:function(){return{tokenize:o}},token:function(n,t){return n.eatSpace()?null:t.tokenize(n,t)}};export{p as solr};
